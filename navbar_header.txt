export function Navbar() {
    const { user, userProfile, signOut, isAdmin } = useAuth();
    const router = useRouter();
    const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
    const [showPhotoUpload, setShowPhotoUpload] = useState(false);
    const [photoUploadPosition, setPhotoUploadPosition] = useState<{ x: number; y: number } | null>(null);
    const avatarRef = useRef<HTMLButtonElement>(null);

    const toggleMobileMenu = useCallback(() => {
        setMobileMenuOpen(prev => !prev);
    }, []);

    const handleLogout = async () => {
        try {
            await signOut();
        } catch (error) {
            console.error("Error signing out:", error);
        }
    };

    const handleAvatarClick = (e: React.MouseEvent) => {
        e.preventDefault();
        e.stopPropagation();
        
        console.log("Edit Profile Photo clicked!");
        
        if (avatarRef.current) {
            const rect = avatarRef.current.getBoundingClientRect();
            setPhotoUploadPosition({
                x: rect.left + rect.width / 2,
                y: rect.bottom + 10
            });
            setShowPhotoUpload(true);
        }
    };

    const handleAvatarDoubleClick = (e: React.MouseEvent) => {
        e.preventDefault();
        e.stopPropagation();
        handleAvatarClick(e);
    };

    const userInitial = user?.email?.charAt(0).toUpperCase() || "U";
    // Prefer avatar_url from user_profiles, then user_metadata, else fallback letter
    const avatarUrl = (userProfile as any)?.avatar_url
        || (user as any)?.user_metadata?.avatar_url
        || (user as any)?.user_metadata?.picture
        || undefined;

